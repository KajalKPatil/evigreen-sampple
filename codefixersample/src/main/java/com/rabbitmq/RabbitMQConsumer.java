package com.rabbitmq;import java.io.IOException;import com.rabbitmq.client.AMQP;import com.rabbitmq.client.Channel;import com.rabbitmq.client.Connection;import com.rabbitmq.client.ConnectionFactory;import com.rabbitmq.client.Consumer;import com.rabbitmq.client.DefaultConsumer;import com.rabbitmq.client.Envelope;public class RabbitMQConsumer {	private final static String QUEUE_NAME = "my_queue";	public static void main(String[] argv) throws Exception {		Connection connection = null;		Channel channel = null;		try {			// create a connection to the RabbitMQ server			ConnectionFactory factory = new ConnectionFactory();			factory.setHost("localhost");			connection = factory.newConnection();			// create a channel for communication with the server			channel = connection.createChannel();			// declare the queue from which we will consume messages			channel.queueDeclare(QUEUE_NAME, false, false, false, null);			// create a consumer to receive messages from the queue			Consumer consumer = new DefaultConsumer(channel) {				@Override				public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties,						byte[] body) throws IOException {					String message = new String(body, "UTF-8");					System.out.println("Received message: " + message);				}			};			System.out.println("consumer " + consumer);		} catch (Exception e) {			e.printStackTrace();		} finally {						if (channel != null) {				channel.close();			}			if (connection != null) {				connection.close();			}		}	}}